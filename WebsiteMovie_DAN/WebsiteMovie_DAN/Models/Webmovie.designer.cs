#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebsiteMovie_DAN.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Webmoviedb")]
	public partial class WebmovieDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void Inserttintucphim(tintucphim instance);
    partial void Updatetintucphim(tintucphim instance);
    partial void Deletetintucphim(tintucphim instance);
    partial void InsertCTTapPhim(CTTapPhim instance);
    partial void UpdateCTTapPhim(CTTapPhim instance);
    partial void DeleteCTTapPhim(CTTapPhim instance);
    partial void InsertDSPhimBo(DSPhimBo instance);
    partial void UpdateDSPhimBo(DSPhimBo instance);
    partial void DeleteDSPhimBo(DSPhimBo instance);
    partial void InsertDSPhimLe(DSPhimLe instance);
    partial void UpdateDSPhimLe(DSPhimLe instance);
    partial void DeleteDSPhimLe(DSPhimLe instance);
    partial void InsertHopPhim(HopPhim instance);
    partial void UpdateHopPhim(HopPhim instance);
    partial void DeleteHopPhim(HopPhim instance);
    partial void InsertLichSu(LichSu instance);
    partial void UpdateLichSu(LichSu instance);
    partial void DeleteLichSu(LichSu instance);
    partial void InsertNam(Nam instance);
    partial void UpdateNam(Nam instance);
    partial void DeleteNam(Nam instance);
    partial void InsertQuocGia(QuocGia instance);
    partial void UpdateQuocGia(QuocGia instance);
    partial void DeleteQuocGia(QuocGia instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    #endregion
		
		public WebmovieDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebmoviedbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WebmovieDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebmovieDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebmovieDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebmovieDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<tintucphim> tintucphims
		{
			get
			{
				return this.GetTable<tintucphim>();
			}
		}
		
		public System.Data.Linq.Table<CTTapPhim> CTTapPhims
		{
			get
			{
				return this.GetTable<CTTapPhim>();
			}
		}
		
		public System.Data.Linq.Table<DSPhimBo> DSPhimBos
		{
			get
			{
				return this.GetTable<DSPhimBo>();
			}
		}
		
		public System.Data.Linq.Table<DSPhimLe> DSPhimLes
		{
			get
			{
				return this.GetTable<DSPhimLe>();
			}
		}
		
		public System.Data.Linq.Table<gioithieu> gioithieus
		{
			get
			{
				return this.GetTable<gioithieu>();
			}
		}
		
		public System.Data.Linq.Table<HopPhim> HopPhims
		{
			get
			{
				return this.GetTable<HopPhim>();
			}
		}
		
		public System.Data.Linq.Table<LichSu> LichSus
		{
			get
			{
				return this.GetTable<LichSu>();
			}
		}
		
		public System.Data.Linq.Table<Nam> Nams
		{
			get
			{
				return this.GetTable<Nam>();
			}
		}
		
		public System.Data.Linq.Table<QuocGia> QuocGias
		{
			get
			{
				return this.GetTable<QuocGia>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Img;
		
		private System.Nullable<int> _IDPhim;
		
		private EntityRef<DSPhimBo> _DSPhimBo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnIDPhimChanging(System.Nullable<int> value);
    partial void OnIDPhimChanged();
    #endregion
		
		public Banner()
		{
			this._DSPhimBo = default(EntityRef<DSPhimBo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(MAX)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhim", DbType="Int")]
		public System.Nullable<int> IDPhim
		{
			get
			{
				return this._IDPhim;
			}
			set
			{
				if ((this._IDPhim != value))
				{
					if (this._DSPhimBo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhimChanging(value);
					this.SendPropertyChanging();
					this._IDPhim = value;
					this.SendPropertyChanged("IDPhim");
					this.OnIDPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_Banner", Storage="_DSPhimBo", ThisKey="IDPhim", OtherKey="ID", IsForeignKey=true)]
		public DSPhimBo DSPhimBo
		{
			get
			{
				return this._DSPhimBo.Entity;
			}
			set
			{
				DSPhimBo previousValue = this._DSPhimBo.Entity;
				if (((previousValue != value) 
							|| (this._DSPhimBo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DSPhimBo.Entity = null;
						previousValue.Banners.Remove(this);
					}
					this._DSPhimBo.Entity = value;
					if ((value != null))
					{
						value.Banners.Add(this);
						this._IDPhim = value.ID;
					}
					else
					{
						this._IDPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("DSPhimBo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tintucphim")]
	public partial class tintucphim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idtintuc;
		
		private string _tieude;
		
		private string _tomtat;
		
		private string _noidung;
		
		private string _hinhanh;
		
		private System.Nullable<System.DateTime> _ngaycapnhat;
		
		private System.Nullable<int> _luotxem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidtintucChanging(int value);
    partial void OnidtintucChanged();
    partial void OntieudeChanging(string value);
    partial void OntieudeChanged();
    partial void OntomtatChanging(string value);
    partial void OntomtatChanged();
    partial void OnnoidungChanging(string value);
    partial void OnnoidungChanged();
    partial void OnhinhanhChanging(string value);
    partial void OnhinhanhChanged();
    partial void OnngaycapnhatChanging(System.Nullable<System.DateTime> value);
    partial void OnngaycapnhatChanged();
    partial void OnluotxemChanging(System.Nullable<int> value);
    partial void OnluotxemChanged();
    #endregion
		
		public tintucphim()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtintuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idtintuc
		{
			get
			{
				return this._idtintuc;
			}
			set
			{
				if ((this._idtintuc != value))
				{
					this.OnidtintucChanging(value);
					this.SendPropertyChanging();
					this._idtintuc = value;
					this.SendPropertyChanged("idtintuc");
					this.OnidtintucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tieude", DbType="NVarChar(MAX)")]
		public string tieude
		{
			get
			{
				return this._tieude;
			}
			set
			{
				if ((this._tieude != value))
				{
					this.OntieudeChanging(value);
					this.SendPropertyChanging();
					this._tieude = value;
					this.SendPropertyChanged("tieude");
					this.OntieudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tomtat", DbType="NVarChar(MAX)")]
		public string tomtat
		{
			get
			{
				return this._tomtat;
			}
			set
			{
				if ((this._tomtat != value))
				{
					this.OntomtatChanging(value);
					this.SendPropertyChanging();
					this._tomtat = value;
					this.SendPropertyChanged("tomtat");
					this.OntomtatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noidung", DbType="NVarChar(MAX)")]
		public string noidung
		{
			get
			{
				return this._noidung;
			}
			set
			{
				if ((this._noidung != value))
				{
					this.OnnoidungChanging(value);
					this.SendPropertyChanging();
					this._noidung = value;
					this.SendPropertyChanged("noidung");
					this.OnnoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhanh", DbType="NVarChar(MAX)")]
		public string hinhanh
		{
			get
			{
				return this._hinhanh;
			}
			set
			{
				if ((this._hinhanh != value))
				{
					this.OnhinhanhChanging(value);
					this.SendPropertyChanging();
					this._hinhanh = value;
					this.SendPropertyChanged("hinhanh");
					this.OnhinhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaycapnhat", DbType="Date")]
		public System.Nullable<System.DateTime> ngaycapnhat
		{
			get
			{
				return this._ngaycapnhat;
			}
			set
			{
				if ((this._ngaycapnhat != value))
				{
					this.OnngaycapnhatChanging(value);
					this.SendPropertyChanging();
					this._ngaycapnhat = value;
					this.SendPropertyChanged("ngaycapnhat");
					this.OnngaycapnhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luotxem", DbType="Int")]
		public System.Nullable<int> luotxem
		{
			get
			{
				return this._luotxem;
			}
			set
			{
				if ((this._luotxem != value))
				{
					this.OnluotxemChanging(value);
					this.SendPropertyChanging();
					this._luotxem = value;
					this.SendPropertyChanged("luotxem");
					this.OnluotxemChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTTapPhim")]
	public partial class CTTapPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPhim;
		
		private System.Nullable<int> _TapPhim;
		
		private System.Nullable<int> _ID;
		
		private string _Link;
		
		private EntityRef<DSPhimBo> _DSPhimBo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPhimChanging(int value);
    partial void OnIDPhimChanged();
    partial void OnTapPhimChanging(System.Nullable<int> value);
    partial void OnTapPhimChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public CTTapPhim()
		{
			this._DSPhimBo = default(EntityRef<DSPhimBo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPhim
		{
			get
			{
				return this._IDPhim;
			}
			set
			{
				if ((this._IDPhim != value))
				{
					this.OnIDPhimChanging(value);
					this.SendPropertyChanging();
					this._IDPhim = value;
					this.SendPropertyChanged("IDPhim");
					this.OnIDPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TapPhim", DbType="Int")]
		public System.Nullable<int> TapPhim
		{
			get
			{
				return this._TapPhim;
			}
			set
			{
				if ((this._TapPhim != value))
				{
					this.OnTapPhimChanging(value);
					this.SendPropertyChanging();
					this._TapPhim = value;
					this.SendPropertyChanged("TapPhim");
					this.OnTapPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._DSPhimBo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_CTTapPhim", Storage="_DSPhimBo", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public DSPhimBo DSPhimBo
		{
			get
			{
				return this._DSPhimBo.Entity;
			}
			set
			{
				DSPhimBo previousValue = this._DSPhimBo.Entity;
				if (((previousValue != value) 
							|| (this._DSPhimBo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DSPhimBo.Entity = null;
						previousValue.CTTapPhims.Remove(this);
					}
					this._DSPhimBo.Entity = value;
					if ((value != null))
					{
						value.CTTapPhims.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DSPhimBo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSPhimBo")]
	public partial class DSPhimBo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenPhim;
		
		private string _NoiDung;
		
		private System.Nullable<int> _NamPhatHanh;
		
		private System.Nullable<int> _IDTheLoai;
		
		private string _ThoiLuong;
		
		private string _Img;
		
		private System.Nullable<int> _MaQG;
		
		private System.Nullable<int> _LuotXem;
		
		private EntitySet<Banner> _Banners;
		
		private EntitySet<CTTapPhim> _CTTapPhims;
		
		private EntitySet<HopPhim> _HopPhims;
		
		private EntitySet<LichSu> _LichSus;
		
		private EntityRef<Nam> _Nam;
		
		private EntityRef<QuocGia> _QuocGia;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNamPhatHanhChanging(System.Nullable<int> value);
    partial void OnNamPhatHanhChanged();
    partial void OnIDTheLoaiChanging(System.Nullable<int> value);
    partial void OnIDTheLoaiChanged();
    partial void OnThoiLuongChanging(string value);
    partial void OnThoiLuongChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnMaQGChanging(System.Nullable<int> value);
    partial void OnMaQGChanged();
    partial void OnLuotXemChanging(System.Nullable<int> value);
    partial void OnLuotXemChanged();
    #endregion
		
		public DSPhimBo()
		{
			this._Banners = new EntitySet<Banner>(new Action<Banner>(this.attach_Banners), new Action<Banner>(this.detach_Banners));
			this._CTTapPhims = new EntitySet<CTTapPhim>(new Action<CTTapPhim>(this.attach_CTTapPhims), new Action<CTTapPhim>(this.detach_CTTapPhims));
			this._HopPhims = new EntitySet<HopPhim>(new Action<HopPhim>(this.attach_HopPhims), new Action<HopPhim>(this.detach_HopPhims));
			this._LichSus = new EntitySet<LichSu>(new Action<LichSu>(this.attach_LichSus), new Action<LichSu>(this.detach_LichSus));
			this._Nam = default(EntityRef<Nam>);
			this._QuocGia = default(EntityRef<QuocGia>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(MAX)")]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamPhatHanh", DbType="Int")]
		public System.Nullable<int> NamPhatHanh
		{
			get
			{
				return this._NamPhatHanh;
			}
			set
			{
				if ((this._NamPhatHanh != value))
				{
					if (this._Nam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNamPhatHanhChanging(value);
					this.SendPropertyChanging();
					this._NamPhatHanh = value;
					this.SendPropertyChanged("NamPhatHanh");
					this.OnNamPhatHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTheLoai", DbType="Int")]
		public System.Nullable<int> IDTheLoai
		{
			get
			{
				return this._IDTheLoai;
			}
			set
			{
				if ((this._IDTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDTheLoai = value;
					this.SendPropertyChanged("IDTheLoai");
					this.OnIDTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="NVarChar(15)")]
		public string ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(MAX)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQG", DbType="Int")]
		public System.Nullable<int> MaQG
		{
			get
			{
				return this._MaQG;
			}
			set
			{
				if ((this._MaQG != value))
				{
					if (this._QuocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQGChanging(value);
					this.SendPropertyChanging();
					this._MaQG = value;
					this.SendPropertyChanged("MaQG");
					this.OnMaQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotXem", DbType="Int")]
		public System.Nullable<int> LuotXem
		{
			get
			{
				return this._LuotXem;
			}
			set
			{
				if ((this._LuotXem != value))
				{
					this.OnLuotXemChanging(value);
					this.SendPropertyChanging();
					this._LuotXem = value;
					this.SendPropertyChanged("LuotXem");
					this.OnLuotXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_Banner", Storage="_Banners", ThisKey="ID", OtherKey="IDPhim")]
		public EntitySet<Banner> Banners
		{
			get
			{
				return this._Banners;
			}
			set
			{
				this._Banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_CTTapPhim", Storage="_CTTapPhims", ThisKey="ID", OtherKey="ID")]
		public EntitySet<CTTapPhim> CTTapPhims
		{
			get
			{
				return this._CTTapPhims;
			}
			set
			{
				this._CTTapPhims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_HopPhim", Storage="_HopPhims", ThisKey="ID", OtherKey="IDPhim")]
		public EntitySet<HopPhim> HopPhims
		{
			get
			{
				return this._HopPhims;
			}
			set
			{
				this._HopPhims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_LichSu", Storage="_LichSus", ThisKey="ID", OtherKey="IDPhim")]
		public EntitySet<LichSu> LichSus
		{
			get
			{
				return this._LichSus;
			}
			set
			{
				this._LichSus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nam_DSPhimBo", Storage="_Nam", ThisKey="NamPhatHanh", OtherKey="MaNam", IsForeignKey=true)]
		public Nam Nam
		{
			get
			{
				return this._Nam.Entity;
			}
			set
			{
				Nam previousValue = this._Nam.Entity;
				if (((previousValue != value) 
							|| (this._Nam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nam.Entity = null;
						previousValue.DSPhimBos.Remove(this);
					}
					this._Nam.Entity = value;
					if ((value != null))
					{
						value.DSPhimBos.Add(this);
						this._NamPhatHanh = value.MaNam;
					}
					else
					{
						this._NamPhatHanh = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_DSPhimBo", Storage="_QuocGia", ThisKey="MaQG", OtherKey="MaQG", IsForeignKey=true)]
		public QuocGia QuocGia
		{
			get
			{
				return this._QuocGia.Entity;
			}
			set
			{
				QuocGia previousValue = this._QuocGia.Entity;
				if (((previousValue != value) 
							|| (this._QuocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuocGia.Entity = null;
						previousValue.DSPhimBos.Remove(this);
					}
					this._QuocGia.Entity = value;
					if ((value != null))
					{
						value.DSPhimBos.Add(this);
						this._MaQG = value.MaQG;
					}
					else
					{
						this._MaQG = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuocGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_DSPhimBo", Storage="_TheLoai", ThisKey="IDTheLoai", OtherKey="IDTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.DSPhimBos.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.DSPhimBos.Add(this);
						this._IDTheLoai = value.IDTheLoai;
					}
					else
					{
						this._IDTheLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = this;
		}
		
		private void detach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = null;
		}
		
		private void attach_CTTapPhims(CTTapPhim entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = this;
		}
		
		private void detach_CTTapPhims(CTTapPhim entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = null;
		}
		
		private void attach_HopPhims(HopPhim entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = this;
		}
		
		private void detach_HopPhims(HopPhim entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = null;
		}
		
		private void attach_LichSus(LichSu entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = this;
		}
		
		private void detach_LichSus(LichSu entity)
		{
			this.SendPropertyChanging();
			entity.DSPhimBo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSPhimLe")]
	public partial class DSPhimLe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenPhim;
		
		private string _NoiDung;
		
		private System.Nullable<int> _NamPhatHanh;
		
		private System.Nullable<int> _IDTheLoai;
		
		private string _ThoiLuong;
		
		private string _Img;
		
		private System.Nullable<int> _MaQG;
		
		private System.Nullable<int> _LuotXem;
		
		private string _Link;
		
		private EntityRef<Nam> _Nam;
		
		private EntityRef<QuocGia> _QuocGia;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNamPhatHanhChanging(System.Nullable<int> value);
    partial void OnNamPhatHanhChanged();
    partial void OnIDTheLoaiChanging(System.Nullable<int> value);
    partial void OnIDTheLoaiChanged();
    partial void OnThoiLuongChanging(string value);
    partial void OnThoiLuongChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnMaQGChanging(System.Nullable<int> value);
    partial void OnMaQGChanged();
    partial void OnLuotXemChanging(System.Nullable<int> value);
    partial void OnLuotXemChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public DSPhimLe()
		{
			this._Nam = default(EntityRef<Nam>);
			this._QuocGia = default(EntityRef<QuocGia>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(MAX)")]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamPhatHanh", DbType="Int")]
		public System.Nullable<int> NamPhatHanh
		{
			get
			{
				return this._NamPhatHanh;
			}
			set
			{
				if ((this._NamPhatHanh != value))
				{
					if (this._Nam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNamPhatHanhChanging(value);
					this.SendPropertyChanging();
					this._NamPhatHanh = value;
					this.SendPropertyChanged("NamPhatHanh");
					this.OnNamPhatHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTheLoai", DbType="Int")]
		public System.Nullable<int> IDTheLoai
		{
			get
			{
				return this._IDTheLoai;
			}
			set
			{
				if ((this._IDTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDTheLoai = value;
					this.SendPropertyChanged("IDTheLoai");
					this.OnIDTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="NVarChar(15)")]
		public string ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="NVarChar(MAX)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQG", DbType="Int")]
		public System.Nullable<int> MaQG
		{
			get
			{
				return this._MaQG;
			}
			set
			{
				if ((this._MaQG != value))
				{
					if (this._QuocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQGChanging(value);
					this.SendPropertyChanging();
					this._MaQG = value;
					this.SendPropertyChanged("MaQG");
					this.OnMaQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotXem", DbType="Int")]
		public System.Nullable<int> LuotXem
		{
			get
			{
				return this._LuotXem;
			}
			set
			{
				if ((this._LuotXem != value))
				{
					this.OnLuotXemChanging(value);
					this.SendPropertyChanging();
					this._LuotXem = value;
					this.SendPropertyChanged("LuotXem");
					this.OnLuotXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nam_DSPhimLe", Storage="_Nam", ThisKey="NamPhatHanh", OtherKey="MaNam", IsForeignKey=true)]
		public Nam Nam
		{
			get
			{
				return this._Nam.Entity;
			}
			set
			{
				Nam previousValue = this._Nam.Entity;
				if (((previousValue != value) 
							|| (this._Nam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nam.Entity = null;
						previousValue.DSPhimLes.Remove(this);
					}
					this._Nam.Entity = value;
					if ((value != null))
					{
						value.DSPhimLes.Add(this);
						this._NamPhatHanh = value.MaNam;
					}
					else
					{
						this._NamPhatHanh = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_DSPhimLe", Storage="_QuocGia", ThisKey="MaQG", OtherKey="MaQG", IsForeignKey=true)]
		public QuocGia QuocGia
		{
			get
			{
				return this._QuocGia.Entity;
			}
			set
			{
				QuocGia previousValue = this._QuocGia.Entity;
				if (((previousValue != value) 
							|| (this._QuocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuocGia.Entity = null;
						previousValue.DSPhimLes.Remove(this);
					}
					this._QuocGia.Entity = value;
					if ((value != null))
					{
						value.DSPhimLes.Add(this);
						this._MaQG = value.MaQG;
					}
					else
					{
						this._MaQG = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuocGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_DSPhimLe", Storage="_TheLoai", ThisKey="IDTheLoai", OtherKey="IDTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.DSPhimLes.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.DSPhimLes.Add(this);
						this._IDTheLoai = value.IDTheLoai;
					}
					else
					{
						this._IDTheLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gioithieu")]
	public partial class gioithieu
	{
		
		private int _idgioitin;
		
		private string _noidung;
		
		private string _sdtlien;
		
		public gioithieu()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idgioitin", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int idgioitin
		{
			get
			{
				return this._idgioitin;
			}
			set
			{
				if ((this._idgioitin != value))
				{
					this._idgioitin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noidung", DbType="NVarChar(MAX)")]
		public string noidung
		{
			get
			{
				return this._noidung;
			}
			set
			{
				if ((this._noidung != value))
				{
					this._noidung = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdtlien", DbType="NVarChar(MAX)")]
		public string sdtlien
		{
			get
			{
				return this._sdtlien;
			}
			set
			{
				if ((this._sdtlien != value))
				{
					this._sdtlien = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HopPhim")]
	public partial class HopPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDN;
		
		private int _IDPhim;
		
		private EntityRef<DSPhimBo> _DSPhimBo;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnIDPhimChanging(int value);
    partial void OnIDPhimChanged();
    #endregion
		
		public HopPhim()
		{
			this._DSPhimBo = default(EntityRef<DSPhimBo>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPhim
		{
			get
			{
				return this._IDPhim;
			}
			set
			{
				if ((this._IDPhim != value))
				{
					if (this._DSPhimBo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhimChanging(value);
					this.SendPropertyChanging();
					this._IDPhim = value;
					this.SendPropertyChanged("IDPhim");
					this.OnIDPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_HopPhim", Storage="_DSPhimBo", ThisKey="IDPhim", OtherKey="ID", IsForeignKey=true)]
		public DSPhimBo DSPhimBo
		{
			get
			{
				return this._DSPhimBo.Entity;
			}
			set
			{
				DSPhimBo previousValue = this._DSPhimBo.Entity;
				if (((previousValue != value) 
							|| (this._DSPhimBo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DSPhimBo.Entity = null;
						previousValue.HopPhims.Remove(this);
					}
					this._DSPhimBo.Entity = value;
					if ((value != null))
					{
						value.HopPhims.Add(this);
						this._IDPhim = value.ID;
					}
					else
					{
						this._IDPhim = default(int);
					}
					this.SendPropertyChanged("DSPhimBo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HopPhim", Storage="_TaiKhoan", ThisKey="TenDN", OtherKey="TenDN", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.HopPhims.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HopPhims.Add(this);
						this._TenDN = value.TenDN;
					}
					else
					{
						this._TenDN = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSu")]
	public partial class LichSu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDN;
		
		private int _IDPhim;
		
		private EntityRef<DSPhimBo> _DSPhimBo;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnIDPhimChanging(int value);
    partial void OnIDPhimChanged();
    #endregion
		
		public LichSu()
		{
			this._DSPhimBo = default(EntityRef<DSPhimBo>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPhim
		{
			get
			{
				return this._IDPhim;
			}
			set
			{
				if ((this._IDPhim != value))
				{
					if (this._DSPhimBo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhimChanging(value);
					this.SendPropertyChanging();
					this._IDPhim = value;
					this.SendPropertyChanged("IDPhim");
					this.OnIDPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSPhimBo_LichSu", Storage="_DSPhimBo", ThisKey="IDPhim", OtherKey="ID", IsForeignKey=true)]
		public DSPhimBo DSPhimBo
		{
			get
			{
				return this._DSPhimBo.Entity;
			}
			set
			{
				DSPhimBo previousValue = this._DSPhimBo.Entity;
				if (((previousValue != value) 
							|| (this._DSPhimBo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DSPhimBo.Entity = null;
						previousValue.LichSus.Remove(this);
					}
					this._DSPhimBo.Entity = value;
					if ((value != null))
					{
						value.LichSus.Add(this);
						this._IDPhim = value.ID;
					}
					else
					{
						this._IDPhim = default(int);
					}
					this.SendPropertyChanged("DSPhimBo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichSu", Storage="_TaiKhoan", ThisKey="TenDN", OtherKey="TenDN", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.LichSus.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.LichSus.Add(this);
						this._TenDN = value.TenDN;
					}
					else
					{
						this._TenDN = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nam")]
	public partial class Nam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNam;
		
		private System.Nullable<int> _TenNam;
		
		private EntitySet<DSPhimBo> _DSPhimBos;
		
		private EntitySet<DSPhimLe> _DSPhimLes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNamChanging(int value);
    partial void OnMaNamChanged();
    partial void OnTenNamChanging(System.Nullable<int> value);
    partial void OnTenNamChanged();
    #endregion
		
		public Nam()
		{
			this._DSPhimBos = new EntitySet<DSPhimBo>(new Action<DSPhimBo>(this.attach_DSPhimBos), new Action<DSPhimBo>(this.detach_DSPhimBos));
			this._DSPhimLes = new EntitySet<DSPhimLe>(new Action<DSPhimLe>(this.attach_DSPhimLes), new Action<DSPhimLe>(this.detach_DSPhimLes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNam", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNam
		{
			get
			{
				return this._MaNam;
			}
			set
			{
				if ((this._MaNam != value))
				{
					this.OnMaNamChanging(value);
					this.SendPropertyChanging();
					this._MaNam = value;
					this.SendPropertyChanged("MaNam");
					this.OnMaNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNam", DbType="Int")]
		public System.Nullable<int> TenNam
		{
			get
			{
				return this._TenNam;
			}
			set
			{
				if ((this._TenNam != value))
				{
					this.OnTenNamChanging(value);
					this.SendPropertyChanging();
					this._TenNam = value;
					this.SendPropertyChanged("TenNam");
					this.OnTenNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nam_DSPhimBo", Storage="_DSPhimBos", ThisKey="MaNam", OtherKey="NamPhatHanh")]
		public EntitySet<DSPhimBo> DSPhimBos
		{
			get
			{
				return this._DSPhimBos;
			}
			set
			{
				this._DSPhimBos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nam_DSPhimLe", Storage="_DSPhimLes", ThisKey="MaNam", OtherKey="NamPhatHanh")]
		public EntitySet<DSPhimLe> DSPhimLes
		{
			get
			{
				return this._DSPhimLes;
			}
			set
			{
				this._DSPhimLes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DSPhimBos(DSPhimBo entity)
		{
			this.SendPropertyChanging();
			entity.Nam = this;
		}
		
		private void detach_DSPhimBos(DSPhimBo entity)
		{
			this.SendPropertyChanging();
			entity.Nam = null;
		}
		
		private void attach_DSPhimLes(DSPhimLe entity)
		{
			this.SendPropertyChanging();
			entity.Nam = this;
		}
		
		private void detach_DSPhimLes(DSPhimLe entity)
		{
			this.SendPropertyChanging();
			entity.Nam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuocGia")]
	public partial class QuocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQG;
		
		private string _TenQG;
		
		private EntitySet<DSPhimBo> _DSPhimBos;
		
		private EntitySet<DSPhimLe> _DSPhimLes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQGChanging(int value);
    partial void OnMaQGChanged();
    partial void OnTenQGChanging(string value);
    partial void OnTenQGChanged();
    #endregion
		
		public QuocGia()
		{
			this._DSPhimBos = new EntitySet<DSPhimBo>(new Action<DSPhimBo>(this.attach_DSPhimBos), new Action<DSPhimBo>(this.detach_DSPhimBos));
			this._DSPhimLes = new EntitySet<DSPhimLe>(new Action<DSPhimLe>(this.attach_DSPhimLes), new Action<DSPhimLe>(this.detach_DSPhimLes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQG
		{
			get
			{
				return this._MaQG;
			}
			set
			{
				if ((this._MaQG != value))
				{
					this.OnMaQGChanging(value);
					this.SendPropertyChanging();
					this._MaQG = value;
					this.SendPropertyChanged("MaQG");
					this.OnMaQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQG", DbType="NVarChar(50)")]
		public string TenQG
		{
			get
			{
				return this._TenQG;
			}
			set
			{
				if ((this._TenQG != value))
				{
					this.OnTenQGChanging(value);
					this.SendPropertyChanging();
					this._TenQG = value;
					this.SendPropertyChanged("TenQG");
					this.OnTenQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_DSPhimBo", Storage="_DSPhimBos", ThisKey="MaQG", OtherKey="MaQG")]
		public EntitySet<DSPhimBo> DSPhimBos
		{
			get
			{
				return this._DSPhimBos;
			}
			set
			{
				this._DSPhimBos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_DSPhimLe", Storage="_DSPhimLes", ThisKey="MaQG", OtherKey="MaQG")]
		public EntitySet<DSPhimLe> DSPhimLes
		{
			get
			{
				return this._DSPhimLes;
			}
			set
			{
				this._DSPhimLes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DSPhimBos(DSPhimBo entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = this;
		}
		
		private void detach_DSPhimBos(DSPhimBo entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = null;
		}
		
		private void attach_DSPhimLes(DSPhimLe entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = this;
		}
		
		private void detach_DSPhimLes(DSPhimLe entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private System.Nullable<bool> _Quyen;
		
		private string _Email;
		
		private EntitySet<HopPhim> _HopPhims;
		
		private EntitySet<LichSu> _LichSus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenChanging(System.Nullable<bool> value);
    partial void OnQuyenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._HopPhims = new EntitySet<HopPhim>(new Action<HopPhim>(this.attach_HopPhims), new Action<HopPhim>(this.detach_HopPhims));
			this._LichSus = new EntitySet<LichSu>(new Action<LichSu>(this.attach_LichSus), new Action<LichSu>(this.detach_LichSus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="Bit")]
		public System.Nullable<bool> Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HopPhim", Storage="_HopPhims", ThisKey="TenDN", OtherKey="TenDN")]
		public EntitySet<HopPhim> HopPhims
		{
			get
			{
				return this._HopPhims;
			}
			set
			{
				this._HopPhims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichSu", Storage="_LichSus", ThisKey="TenDN", OtherKey="TenDN")]
		public EntitySet<LichSu> LichSus
		{
			get
			{
				return this._LichSus;
			}
			set
			{
				this._LichSus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HopPhims(HopPhim entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_HopPhims(HopPhim entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_LichSus(LichSu entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_LichSus(LichSu entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTheLoai;
		
		private string _TenTheLoai;
		
		private EntitySet<DSPhimBo> _DSPhimBos;
		
		private EntitySet<DSPhimLe> _DSPhimLes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTheLoaiChanging(int value);
    partial void OnIDTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    #endregion
		
		public TheLoai()
		{
			this._DSPhimBos = new EntitySet<DSPhimBo>(new Action<DSPhimBo>(this.attach_DSPhimBos), new Action<DSPhimBo>(this.detach_DSPhimBos));
			this._DSPhimLes = new EntitySet<DSPhimLe>(new Action<DSPhimLe>(this.attach_DSPhimLes), new Action<DSPhimLe>(this.detach_DSPhimLes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTheLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTheLoai
		{
			get
			{
				return this._IDTheLoai;
			}
			set
			{
				if ((this._IDTheLoai != value))
				{
					this.OnIDTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDTheLoai = value;
					this.SendPropertyChanged("IDTheLoai");
					this.OnIDTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(50)")]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_DSPhimBo", Storage="_DSPhimBos", ThisKey="IDTheLoai", OtherKey="IDTheLoai")]
		public EntitySet<DSPhimBo> DSPhimBos
		{
			get
			{
				return this._DSPhimBos;
			}
			set
			{
				this._DSPhimBos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_DSPhimLe", Storage="_DSPhimLes", ThisKey="IDTheLoai", OtherKey="IDTheLoai")]
		public EntitySet<DSPhimLe> DSPhimLes
		{
			get
			{
				return this._DSPhimLes;
			}
			set
			{
				this._DSPhimLes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DSPhimBos(DSPhimBo entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_DSPhimBos(DSPhimBo entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
		
		private void attach_DSPhimLes(DSPhimLe entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_DSPhimLes(DSPhimLe entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
}
#pragma warning restore 1591
